{"Functions.html#/s:15ShudderFeatured9getSearch10searchItem10completionySS_ySay10Foundation4DataVGctF":{"name":"getSearch(searchItem:completion:)","abstract":"<p>Gets a string and calls search calling the Flickr API and search for the string that was passed.  After found, the data of what is found is oassed to parseSearchObject to parse the search results into data which can be converted into images.</p>"},"Functions.html#/s:15ShudderFeatured21createSearchURLString10searchItemS2S_tF":{"name":"createSearchURLString(searchItem:)","abstract":"<p>Constructs the url that is used to create the search through the GET request for the Flickr API with all the needed parameters to return 25 search results.</p>"},"Functions.html#/s:15ShudderFeatured17parseSearchObject4data10completiony10Foundation4DataV_ySayAGGctF":{"name":"parseSearchObject(data:completion:)","abstract":"<p>Takes the data object from <strong>getSearch</strong> and parses into a jsonObject.  Then the <strong>photoData</strong> is to be parsed into indidual images calling <strong>photoData</strong> method</p>"},"Functions.html#/s:15ShudderFeatured9photoData0C010completionySayypG_ySay10Foundation0D0VGctF":{"name":"photoData(photo:completion:)","abstract":"<p>Photo parameter from the json that is received the <strong>getSearch</strong> needs to be extraced and then photo data needs to be extraed to get Data of images to be used to load into imageViews.  This requires another Flickr API call that will get image information from parameters recived from Data from <strong>getSearch</strong> of the set of photos.  This uses multiple threads to recieve the information in parallel to save on computing over a longer period of time since each image needs to be fetched one by one.</p>"},"Functions.html#/s:15ShudderFeatured10createFarm6farmID06serverF005photoF006secretF010completionySi_S3Sy10Foundation4DataVctF":{"name":"createFarm(farmID:serverID:photoID:secretID:completion:)","abstract":"<p>Calls to the Flickr API with parameters that are need to construct the call to recive image Data</p>"},"Functions.html#/s:15ShudderFeatured24dataArrayToCarouselItems0C0SayAA0F4ItemCGSay10Foundation4DataVG_tF":{"name":"dataArrayToCarouselItems(data:)","abstract":"<p>Takes [Data] of image Data and converts into [CarouselItem]</p>"},"Functions.html#/s:15ShudderFeatured028addCollectionSearchSetToDataD05names10completionySaySSG_yyctF":{"name":"addCollectionSearchSetToDataCollection(names:completion:)","abstract":"<p>Take [String] of searches for Flickr API and do searches to recieve back and create [CarouselItems] and append them <strong>dataCollection</strong></p>"},"Functions.html#/s:15ShudderFeatured030addCollectionSearchSetToBannerD05names10completionySaySSG_yyctF":{"name":"addCollectionSearchSetToBannerCollection(names:completion:)","abstract":"<p>Take [String] of searches for Flickr API and do searches to recieve back and create [CarouselItems] and append them <strong>bannerCollection</strong></p>"},"Global Variables.html#/s:15ShudderFeatured6apiKeySSvp":{"name":"apiKey","abstract":"<p>API Key from Flickr API</p>"},"Global Variables.html#/s:15ShudderFeatured9secretKeySSvp":{"name":"secretKey","abstract":"<p>API Secret Key from Flickr API</p>"},"Global Variables.html#/s:15ShudderFeatured11apiEndpointSSvp":{"name":"apiEndpoint","abstract":"<p>API EndPoint to access the FlickrAPI with correspoinding method parameter</p>"},"Global Variables.html#/s:15ShudderFeatured14dataCollectionSayAA11CarouselSetCGvp":{"name":"dataCollection","abstract":"<p>Set of CarouselSets that is recieved to load into the FeaturedTableViewController</p>"},"Global Variables.html#/s:15ShudderFeatured16bannerCollectionSayAA11CarouselSetCGvp":{"name":"bannerCollection","abstract":"<p>Items that compose of Banner Carousel.  Reuseses implemenation of carousels used for movie items</p>"},"Global Variables.html#/s:15ShudderFeatured15backgroundColorSo7UIColorCvp":{"name":"backgroundColor","abstract":"<p>Background color of views</p>"},"Global Variables.html#/s:15ShudderFeatured12sectionColorSo7UIColorCvp":{"name":"sectionColor","abstract":"<p>Title colors and section colors for separators and headings</p>"},"Classes/CustomCollectionView.html#/s:15ShudderFeatured20CustomCollectionViewC10identifierSSvp":{"name":"identifier","abstract":"<p>Identifier to differentiate a Carousel CollectionView and Banner CollectionView</p>","parent_name":"CustomCollectionView"},"Classes/FeaturedCell.html#/c:@M@ShudderFeatured@objc(cs)FeaturedCell(py)collectionView":{"name":"collectionView","abstract":"<p>CollectionView where CarouselSets are set and items will be presented from dataCollection</p>","parent_name":"FeaturedCell"},"Classes/FeaturedCell.html#/s:15ShudderFeatured0B4CellC20collectionViewOffset12CoreGraphics7CGFloatVvp":{"name":"collectionViewOffset","abstract":"<p>This sets the location of the off set of the CollectionView.  As the tableview is being scrolled and reusable cells are being dequed, this saves the last state of the CollectionView per row that it was scrolled to.</p>","parent_name":"FeaturedCell"},"Classes/FeaturedCell.html#/s:15ShudderFeatured0B4CellC35setCollectionViewDataSourceDelegate04datahI06forRow0K10Identifieryx_SiSStSo012UICollectionfgH0RzSo0nfI0RzlF":{"name":"setCollectionViewDataSourceDelegate(dataSourceDelegate:forRow:forIdentifier:)","abstract":"<p>CollectionView is to be set as a delegate per row and tagged to use as an identifier. CollectionView is also registering from the xib template</p>","parent_name":"FeaturedCell"},"Classes/CarouselCell.html#/c:@M@ShudderFeatured@objc(cs)CarouselCell(py)imageView":{"name":"imageView","abstract":"<p>Image that will be shown up as item of CarouselItem</p>","parent_name":"CarouselCell"},"Classes/CarouselItem.html#/s:15ShudderFeatured12CarouselItemC5imageSo7UIImageCSgvp":{"name":"image","abstract":"<p>Image to be loaded from fetched image Data</p>","parent_name":"CarouselItem"},"Classes/CarouselItem.html#/s:15ShudderFeatured12CarouselItemC9imageNameACSS_tcfc":{"name":"init(imageName:)","abstract":"<p>Setting the image name for local images</p>","parent_name":"CarouselItem"},"Classes/CarouselItem.html#/s:15ShudderFeatured12CarouselItemC9imageDataAC10Foundation0F0V_tcfc":{"name":"init(imageData:)","abstract":"<p>Setting the images with Data</p>","parent_name":"CarouselItem"},"Classes/CarouselSet.html#/s:15ShudderFeatured11CarouselSetC4nameSSSgvp":{"name":"name","abstract":"<p>Name of the CarouselSet, also acts as the section name</p>","parent_name":"CarouselSet"},"Classes/CarouselSet.html#/s:15ShudderFeatured11CarouselSetC04itemD0SayAA0C4ItemCGvp":{"name":"itemSet","abstract":"<p>[CarouselItem] that will be carried</p>","parent_name":"CarouselSet"},"Classes/CarouselSet.html#/s:15ShudderFeatured11CarouselSetC4nameACSS_tcfc":{"name":"init(name:)","abstract":"<p>Initialzing name of CarouselSet</p>","parent_name":"CarouselSet"},"Classes/FeaturedTableViewController.html#/s:15ShudderFeatured0B19TableViewControllerC13storedOffsetsSDySi12CoreGraphics7CGFloatVGvp":{"name":"storedOffsets","abstract":"<p>Storing the values of the offsets to saev locations of where CollectionViews have been scrolled to before dequeuing</p>","parent_name":"FeaturedTableViewController"},"Classes/FeaturedTableViewController.html#/c:@M@ShudderFeatured@objc(cs)FeaturedTableViewController(im)viewWillAppear:":{"name":"viewWillAppear(_:)","abstract":"<p>Loading the visual elements that will appear from <strong>visualElements</strong></p>","parent_name":"FeaturedTableViewController"},"Classes/FeaturedTableViewController.html#/s:15ShudderFeatured0B19TableViewControllerC17scrollBannerStartSbvp":{"name":"scrollBannerStart","abstract":"<p>Flag to start the banner to start the correct location after all banner data is collected</p>","parent_name":"FeaturedTableViewController"},"Classes/FeaturedTableViewController.html#/s:15ShudderFeatured0B19TableViewControllerC11bannerItemsSiSgvp":{"name":"bannerItems","abstract":"<p>Checking for allocation of amount of items in banner that is recieved.  This is for allocation for a scroll in Hero Carousel</p>","parent_name":"FeaturedTableViewController"},"Classes/FeaturedTableViewController.html#/s:15ShudderFeatured0B19TableViewControllerC14visualElementsyyF":{"name":"visualElements()","abstract":"<p>Setting up the visual elements that such as colors for elements such as background for view and tableview. Calling this in viewWillAppear.</p>","parent_name":"FeaturedTableViewController"},"Classes/FeaturedTableViewController.html#/c:@M@ShudderFeatured@objc(cs)FeaturedTableViewController(im)viewDidLoad":{"name":"viewDidLoad()","abstract":"<p>Loading the temporary data into DataCollection</p>","parent_name":"FeaturedTableViewController"},"Classes/FeaturedTableViewController.html#/s:15ShudderFeatured0B19TableViewControllerC18sortDataCollection5namesySaySSG_tF":{"name":"sortDataCollection(names:)","abstract":"<p>Helper method to sort that names in DataCollection to the order they were given in, since they can be returned back into another order due to multithreading</p>","parent_name":"FeaturedTableViewController"},"Classes/FeaturedTableViewController.html#/c:@M@ShudderFeatured@objc(cs)FeaturedTableViewController(im)numberOfSectionsInTableView:":{"name":"numberOfSections(in:)","abstract":"<p>Sections tableview is separated, there is only one section</p>","parent_name":"FeaturedTableViewController"},"Classes/FeaturedTableViewController.html#/c:@M@ShudderFeatured@objc(cs)FeaturedTableViewController(im)tableView:numberOfRowsInSection:":{"name":"tableView(_:numberOfRowsInSection:)","abstract":"<p>Number of rows in the section in this case would be twice as large as dataCollections count since there are 2 reusable cells and one is acting as a section header</p>","parent_name":"FeaturedTableViewController"},"Classes/FeaturedTableViewController.html#/c:@M@ShudderFeatured@objc(cs)FeaturedTableViewController(im)tableView:cellForRowAtIndexPath:":{"name":"tableView(_:cellForRowAt:)","abstract":"<p>Set each cell with data, depending on if it is a title cell or a CollectionCell which is a cell that needs to be loaded with the images of the collection view</p>","parent_name":"FeaturedTableViewController"},"Classes/FeaturedTableViewController.html#/c:@M@ShudderFeatured@objc(cs)FeaturedTableViewController(im)tableView:willDisplayCell:forRowAtIndexPath:":{"name":"tableView(_:willDisplay:forRowAt:)","abstract":"<p>Setting the offset and creating the collection views per cell that is being displayed</p>","parent_name":"FeaturedTableViewController"},"Classes/FeaturedTableViewController.html#/c:@M@ShudderFeatured@objc(cs)FeaturedTableViewController(im)tableView:didEndDisplayingCell:forRowAtIndexPath:":{"name":"tableView(_:didEndDisplaying:forRowAt:)","abstract":"<p>Storing the offset as a cell is being reused so it can be saved and loaded when it is displayed again</p>","parent_name":"FeaturedTableViewController"},"Classes/FeaturedTableViewController.html#/c:@M@ShudderFeatured@objc(cs)FeaturedTableViewController(im)tableView:heightForRowAtIndexPath:":{"name":"tableView(_:heightForRowAt:)","abstract":"<p>Configure heights of the section cell and CarouselCell</p>","parent_name":"FeaturedTableViewController"},"Classes/FeaturedTableViewController.html#/s:15ShudderFeatured0B19TableViewControllerC12sequenNumber7integerS2i_tF":{"name":"sequenNumber(integer:)","abstract":"<p>Take an even number of an odd number from a sequence of numbers and this converts it to the correspoding position of where that number is.","parent_name":"FeaturedTableViewController"},"Classes/FeaturedTableViewController.html#/c:@CM@ShudderFeatured@objc(cs)FeaturedTableViewController(im)collectionView:numberOfItemsInSection:":{"name":"collectionView(_:numberOfItemsInSection:)","abstract":"<p>/Configuring the count of elements in CarouselSet at index in DataCollection</p>","parent_name":"FeaturedTableViewController"},"Classes/FeaturedTableViewController.html#/c:@CM@ShudderFeatured@objc(cs)FeaturedTableViewController(im)collectionView:cellForItemAtIndexPath:":{"name":"collectionView(_:cellForItemAt:)","abstract":"<p>Set CarouselCell with image for correct CollectionView which is configured by tag as well as loading each item with image from CarouselItem</p>","parent_name":"FeaturedTableViewController"},"Classes/FeaturedTableViewController.html#/c:@CM@ShudderFeatured@objc(cs)FeaturedTableViewController(im)collectionView:layout:sizeForItemAtIndexPath:":{"name":"collectionView(_:layout:sizeForItemAt:)","abstract":"<p>Configure the height and width layout of the cells in CollectionView</p>","parent_name":"FeaturedTableViewController"},"Classes/FeaturedTableViewController.html#/c:@CM@ShudderFeatured@objc(cs)FeaturedTableViewController(im)collectionView:willDisplayCell:forItemAtIndexPath:":{"name":"collectionView(_:willDisplay:forItemAt:)","abstract":"<p>Banner scroll configuration to start at the middle of the Hero Carousel</p>","parent_name":"FeaturedTableViewController"},"Classes/FeaturedTableViewController.html#/s:15ShudderFeatured0B19TableViewControllerC21bannerQueueSizeAdjustyyF":{"name":"bannerQueueSizeAdjust()","abstract":"<p>Adjusting the size of bannerCollection after the allocation has happened.  This is a temporary fix but a better solution would be implementing the queue Data Structure.  This is still efficient being that the elements are not allocated until they are in view since cells are being reusued.</p>","parent_name":"FeaturedTableViewController"},"Classes/FeaturedTableViewController.html":{"name":"FeaturedTableViewController","abstract":"<p>The ViewController that will be handling the controls of displaying information to various Views and fetching information from the Model using <strong>DataObjects</strong> and <strong>API</strong></p>"},"Classes/CarouselSet.html":{"name":"CarouselSet","abstract":"<p>Object used to create Carousel Sets.  Data to be loading into CollectionViews.</p>"},"Classes/CarouselItem.html":{"name":"CarouselItem","abstract":"<p>Objects to create items that will be loaded into CollectionViews.</p>"},"Classes/CarouselCell.html":{"name":"CarouselCell","abstract":"<p>CarouselCell structure configuration</p>"},"Classes/FeaturedCell.html":{"name":"FeaturedCell","abstract":"<p>Cell that will be handling the Carousel with CollectionViews</p>"},"Classes/CustomCollectionView.html":{"name":"CustomCollectionView","abstract":"<p>Creating a custom CollectionView to separate the identifiers of Banners and Carousel to reuse the CollectionView Carousel Implementation</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Global Variables.html":{"name":"Global Variables","abstract":"<p>The following global variables are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"}}